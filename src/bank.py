"""
This file contains the intrisic logic of bank functionalities, including:
- create_account
- deposit
- withdraw
- transfer
- get_balance

This invoves two mandatory classes:
- Account
- Transaction
"""

from datetime import datetime

from sqlalchemy import Column, Float, Integer, String, DateTime, ForeignKey
from sqlalchemy.orm import relationship

from .init_db import Base


# Classes
class Account(Base):
    __tablename__ = "accounts"
    # Fields
    account_id = Column(Integer, primary_key=True)
    balance = Column(Float)
    # Relationships
    # One-to-Many: one account may have many transactions
    transactions = relationship("Transaction", back_populates="account")

    # Methods
    def __init__(self, balance: float = 0):
        """
        - account_id is an integer automatically generated by SQLAlchemy (auto-incremented)
        - the initial balance is obviously set to 0
        """
        self.balance = balance


class Transaction(Base):
    __tablename__ = "transactions"
    # Fields
    transaction_id = Column(Integer, primary_key=True)
    account_id = Column(Integer, ForeignKey("accounts.account_id"))
    amount = Column(Float)
    type = Column(String)
    timestamp = Column(DateTime)
    # Relationships
    # Many-to-One: any transaction has only one account
    account = relationship("Account", back_populates="transaction")
    pass


# Functions
def create_account():
    pass

def deposit():
    pass

def withdraw():
    pass

def transfer():
    pass

def get_balance():
    pass
